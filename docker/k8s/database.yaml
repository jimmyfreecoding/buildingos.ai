# PostgreSQL 部署
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: buildingos
  labels:
    app: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - name: postgres
        image: postgres:15-alpine
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRES_DB
          valueFrom:
            configMapKeyRef:
              name: buildingos-config
              key: POSTGRES_DB
        - name: POSTGRES_USER
          valueFrom:
            configMapKeyRef:
              name: buildingos-config
              key: POSTGRES_USER
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: buildingos-secrets
              key: POSTGRES_PASSWORD
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
        volumeMounts:
        - name: postgres-storage
          mountPath: /var/lib/postgresql/data
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
        livenessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - buildingos
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - buildingos
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: postgres-storage
        persistentVolumeClaim:
          claimName: postgres-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  namespace: buildingos
  labels:
    app: postgres
spec:
  ports:
  - port: 5432
    targetPort: 5432
  selector:
    app: postgres
---
# Redis 部署
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  namespace: buildingos
  labels:
    app: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
      - name: redis
        image: redis:7-alpine
        ports:
        - containerPort: 6379
        command:
        - redis-server
        - --requirepass
        - $(REDIS_PASSWORD)
        - --appendonly
        - "yes"
        env:
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: buildingos-secrets
              key: REDIS_PASSWORD
        volumeMounts:
        - name: redis-storage
          mountPath: /data
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          exec:
            command:
            - redis-cli
            - -a
            - $(REDIS_PASSWORD)
            - ping
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          exec:
            command:
            - redis-cli
            - -a
            - $(REDIS_PASSWORD)
            - ping
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: redis-storage
        persistentVolumeClaim:
          claimName: redis-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: redis
  namespace: buildingos
  labels:
    app: redis
spec:
  ports:
  - port: 6379
    targetPort: 6379
  selector:
    app: redis
---
# TDengine 部署
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tdengine
  namespace: buildingos
  labels:
    app: tdengine
spec:
  replicas: 1
  selector:
    matchLabels:
      app: tdengine
  template:
    metadata:
      labels:
        app: tdengine
    spec:
      containers:
      - name: tdengine
        image: tdengine/tdengine:3.3.2.0
        ports:
        - containerPort: 6030
        - containerPort: 6041
        env:
        - name: TAOS_FQDN
          value: "tdengine"
        - name: TAOS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: buildingos-secrets
              key: TDENGINE_PASSWORD
        volumeMounts:
        - name: tdengine-storage
          mountPath: /var/lib/taos
        - name: tdengine-log
          mountPath: /var/log/taos
        resources:
          requests:
            memory: "512Mi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "2000m"
        livenessProbe:
          tcpSocket:
            port: 6030
          initialDelaySeconds: 60
          periodSeconds: 30
        readinessProbe:
          tcpSocket:
            port: 6030
          initialDelaySeconds: 30
          periodSeconds: 10
      volumes:
      - name: tdengine-storage
        persistentVolumeClaim:
          claimName: tdengine-pvc
      - name: tdengine-log
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: tdengine
  namespace: buildingos
  labels:
    app: tdengine
spec:
  ports:
  - name: native
    port: 6030
    targetPort: 6030
  - name: http
    port: 6041
    targetPort: 6041
  selector:
    app: tdengine